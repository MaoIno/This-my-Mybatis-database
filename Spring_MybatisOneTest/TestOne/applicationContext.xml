<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--
        声明数据源DataSource ，作用时连接数据库
        把数据库的配置信息写在一个独立的文件里，编译修改数据库的配置内容
        spring知道jdbc.properties文件的位置
    -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.pass}"/>
        <property name="maxActive" value="${jdbc.max}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
    <!--
        创建dao对象，使用sqlSession的getMapper
        MapperScanner的内部调用了getMapper生成每个dao接口的代理对象
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--
            指定SqlSessionFactory对象的id
        -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--
            指定包名，包名是dao接口所在的包名
            MapperScanner会扫描这个包中的所有接口，把每个接口都执行
            一次getMapper方法，得到每个接口的dao对象
            创建好的dao对象放入到spring容器中，dao对象的默认名称是接口名称的首字母小写
        -->
        <property name="basePackage" value="com.JavaSpring.Spring_Mybatis.dao"/>
    </bean>

    <bean id="studentService" class="com.JavaSpring.Spring_Mybatis.service.Imlp.StudentServiceImpl">
        <property name="studentDao" ref="studentDao"/>
    </bean>

</beans>
